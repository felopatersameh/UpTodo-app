import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:uptodo/features/Index/ViewModel/GetTask/get_task_cubit.dart';import '../../../../core/utils/resource/icons.dart';import '../../../../core/utils/resource/size.dart';import '../../../../core/utils/Widget/custom_row.dart';import '../../../../core/utils/Widget/build_custom_box.dart';import '../../../../core/utils/Widget/custom_build_dialog.dart';import '../../../../core/utils/resource/colors.dart';import '../../model/priority_model.dart';import '../../../../core/utils/resource/string.dart';class BuildPriority extends StatefulWidget {  final PriorityModel? priorityModel;  const BuildPriority({    super.key,    this.priorityModel,  });  @override  State<BuildPriority> createState() => _BuildPriorityState();}class _BuildPriorityState extends State<BuildPriority> {  PriorityModel? _priorityModel;  @override  Widget build(BuildContext context) {    return CustomBuildDialog(      itemBuilder: (context, index) {        return BuildCustomBox(          heightContainer: .1,          onTapChange: () {            context.read<GetTaskCubit>().selected = index;            _priorityModel = PriorityModel(index + 1);            Navigator.of(context).pop(_priorityModel);          },          backGround: context.read<GetTaskCubit>().selected == index              ? AppColors.primaryColor              : AppColors.backGroundColor,          icon: Icon(            AppIcons.flagOutlined,            weight: (AppSize.sizeIcon).sw,            color: AppColors.iconColor,          ),          textIcon: (index + 1).toString(),        );      },      count: 10,      child: CustomRow(        name: AppStrings.edite,        onTap: () {},      ),    );  }}