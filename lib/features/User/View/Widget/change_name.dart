import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:hive/hive.dart';import '../../../../core/Network/serves_locator.dart';import '../../../../core/utils/Widget/build_text_form_field.dart';import '../../../../core/utils/Widget/custom_messages.dart';import '../../../../core/utils/Widget/custom_row.dart';import '../../../../core/utils/resource/string.dart';import '../../ViewModel/user_cubit.dart';import '../../../../core/utils/resource/styles.dart';import '../../Model/user_account_model.dart';class ChangeName extends StatefulWidget {  const ChangeName({super.key});  @override  State<ChangeName> createState() => _ChangeNameState();}final TextEditingController name = TextEditingController();final GlobalKey<FormState> keyForm = GlobalKey<FormState>();class _ChangeNameState extends State<ChangeName> {  UserAccountModel? boxUser;  @override  void initState() {    boxUser = getIt<Box<UserAccountModel>>().getAt(0);    name.text = boxUser!.name;    super.initState();  }  @override  Widget build(BuildContext context) {    return Form(      key: keyForm,      child: Column(        children: [          Padding(            padding: const EdgeInsets.symmetric(vertical: 10).r,            child: Text(AppStrings.user.changeName, style: Styles.text16()),          ),          Divider(            height: 5.h,            indent: 15,            endIndent: 15,          ),          Padding(            padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 24).r,            child: BuildTextFormField(controller: name),          ), // Spacer(),          Expanded(            child: CustomRow(              name: AppStrings.edite,              onTap: () {                if (name.text != boxUser!.name) {                  context.read<UserCubit>().updateUser(name: name.text);                  Navigator.of(context).pop();                  name.clear();                  showMessage(                      text: AppStrings.edite, state: ToastStates.succeed);                } else if (name.text == boxUser!.name) {                  showMessage(                    text: AppStrings.user.messageForSameName,                    state: ToastStates.warning,                  );                }              },            ),          ),          8.verticalSpace        ],      ),    );  }}