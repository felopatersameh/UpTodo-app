import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:hive/hive.dart';import '../../../../core/Network/serves_locator.dart';import '../../../../core/utils/Widget/build_text_form_field.dart';import '../../../../core/utils/Widget/custom_row.dart';import '../../../../core/utils/resource/string.dart';import '../../ViewModel/user_cubit.dart';import '../../../../core/utils/Widget/custom_messages.dart';import '../../../../core/utils/resource/styles.dart';import '../../Model/user_account_model.dart';class ChangePassword extends StatefulWidget {  const ChangePassword({super.key});  @override  State<ChangePassword> createState() => _ChangePasswordState();}final TextEditingController oldPassword = TextEditingController();final TextEditingController newPassword = TextEditingController();final GlobalKey<FormState> keyForm = GlobalKey<FormState>();class _ChangePasswordState extends State<ChangePassword> {  UserAccountModel? boxUser;  @override  void initState() {    boxUser = getIt<Box<UserAccountModel>>().getAt(0);    super.initState();  }  @override  Widget build(BuildContext context) {    return Form(      key: keyForm,      child: Column(        children: [          Padding(            padding: const EdgeInsets.symmetric(vertical: 10),            child: Text(AppStrings.changePassword, style: Styles.text16()),          ),          Divider(            height: 5,            indent: 15,            endIndent: 15,          ),          Padding(            padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 24),            child: BuildTextFormField(              obscureText: true,              controller: oldPassword,              hint: "Old Password",            ),          ),          Padding(            padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 24),            child: BuildTextFormField(              obscureText: true,              controller: newPassword,              hint: "New Password",            ),          ),          Expanded(            child: CustomRow(                name: AppStrings.edite,                onTap: () {                  if (keyForm.currentState!.validate()) {                    if (oldPassword.text != boxUser!.password) {                      showMessage(                          text: "The old Password is not Right",                          state: ToastStates.error);                    } else {                      context                          .read<UserCubit>()                          .updateUser(password: oldPassword.text);                      Navigator.of(context).pop();                      oldPassword.clear();                      newPassword.clear();                    }                  }                }),          ),          SizedBox(            height: 15,          ),        ],      ),    );  }}