import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import '../../../../core/utils/Widget/build_image_cash.dart';import '../../../../core/utils/Widget/image_view.dart';import '../../../TaskManagement/ViewModel/TaskCubit/task_management_cubit.dart';import '../../../../core/utils/resource/colors.dart';import '../../../../core/utils/resource/styles.dart';import '../../Model/user_account_model.dart';import '../../ViewModel/user_cubit.dart';class UserDetails extends StatefulWidget {  const UserDetails({super.key});  @override  State<UserDetails> createState() => _UserDetailsState();}class _UserDetailsState extends State<UserDetails> {  UserAccountModel? user;  @override  void initState() {    user = context.read<UserCubit>().initUserScreen();    super.initState();  }  @override  Widget build(BuildContext context) {    return BlocBuilder<UserCubit, UserState>(      builder: (context, state) {        return Column(          children: [            InkWell(              onTap: () {                Navigator.of(context).push(                  PageRouteBuilder(                    opaque: false,                    pageBuilder: (context, animation, secondaryAnimation) =>                        ImageView(                      photo: user!.image,                    ),                  ),                );              },              // child: CircleAvatar(              //   maxRadius: 0.11.r,              //   backgroundColor: Colors.red,              //   backgroundImage: state is ImagePickedSuccess              //       ? FileImage(state.image)              //       : user != null              //           ? NetworkImage(user!.image)              //           : null,              //   child: state is ImagePickedSuccess || (user != null)              //       ? null              //       : Icon(Icons.person,              //           size: MediaQuery.sizeOf(context).width * 0.11),              // ),              child: Container(                padding: EdgeInsets.all(5),                child: state is ImagePickedSuccess                    ? Image.file(state.image)                    : Container(                        width: 85.w,                        height: 85.h,                        clipBehavior: Clip.hardEdge,                        decoration:                            BoxDecoration(shape: BoxShape.circle, boxShadow: [                          BoxShadow(                            color: AppColors.primaryColor,                            blurRadius: 5,                            blurStyle: BlurStyle.outer,                          ),                        ]),                        child: BuildImageCash(urlImage: user!.image),                      ),              ),            ),            10.verticalSpace,            Text(              state is UserUpdated ? state.user.name : user!.name,              textAlign: TextAlign.center,              style: Styles.text20AppBar(),            ),            20.verticalSpace,            Row(              mainAxisAlignment: MainAxisAlignment.spaceAround,              children: [                showTasksDoneOrLeft(text: "${context.watch<TaskManagementCubit>().taskModel.length} Task left"),                showTasksDoneOrLeft(text: "${context.watch<TaskManagementCubit>().doneTask} Task done"),              ],            ),            32.verticalSpace,          ],        );      },    );  }  Container showTasksDoneOrLeft({required String text}) => Container(                  decoration: BoxDecoration(                    color: AppColors.secondBackGroundColor,                    borderRadius: BorderRadius.circular(4).r,                  ),                  width: 154.w,                  height: 58.h,                  child: Center(                    child: Text(                      text,                      maxLines: 1,                      style: Styles.text16(),                    ),                  ),                );}