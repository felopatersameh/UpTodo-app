import 'package:flutter/material.dart';import 'package:persistent_bottom_nav_bar/persistent_bottom_nav_bar.dart';import '../../../../core/utils/resource/colors.dart';import '../../../Calendar/presentation/pages/calendar_screen.dart';import '../../../Focus/presentation/pages/focus_screen.dart';import '../../../Index/presentation/pages/index_screen.dart';import '../../../User/presentation/pages/user_screen.dart';class LayoutScreen extends StatelessWidget {  const LayoutScreen({super.key});  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(),      body: SafeArea(        child: Container(),      ),      bottomNavigationBar: const BuildBottomNavigationBar(),    );  }}class BuildBottomNavigationBar extends StatefulWidget {  const BuildBottomNavigationBar({    super.key,  });  @override  State<BuildBottomNavigationBar> createState() =>      _BuildBottomNavigationBarState();}late PersistentTabController _controller;class _BuildBottomNavigationBarState extends State<BuildBottomNavigationBar> {  @override  void initState() {    _controller = PersistentTabController(initialIndex: 0);    super.initState();  }  final List<Widget> _buildScreens = [    const IndexScreen(),    const CalendarScreen(),    Container(),    const FocusScreen(),    const UserScreen()  ];  List<PersistentBottomNavBarItem> _navBarsItems() {    return [      PersistentBottomNavBarItem(        icon: const Icon(Icons.home),        title: ("Index"),      ),      PersistentBottomNavBarItem(        icon: const Icon(Icons.calendar_today_sharp),        title: ("Calender"),        // activeColorPrimary: CupertinoColors.activeBlue,        // inactiveColorPrimary: CupertinoColors.systemGrey,        // scrollController: _scrollController1,        // routeAndNavigatorSettings: RouteAndNavigatorSettings(        //   initialRoute: "/",        //   routes: {        //     "/first": (final context) => const MainScreen2(),        //     "/second": (final context) => const MainScreen3(),        //   },        // ),      ),      PersistentBottomNavBarItem(        icon: const Icon(          Icons.add,          color: Colors.white,        ),        title: ("Add"),        // activeColorPrimary: CupertinoColors.activeBlue,        // inactiveColorPrimary: CupertinoColors.systemGrey,        // scrollController: _scrollController1,        // routeAndNavigatorSettings: RouteAndNavigatorSettings(        //   initialRoute: "/",        //   routes: {        //     "/first": (final context) => const MainScreen2(),        //     "/second": (final context) => const MainScreen3(),        //   },        // ),      ),      PersistentBottomNavBarItem(        icon: const Icon(Icons.access_time_outlined),        title: ("Focus"),      ),      PersistentBottomNavBarItem(        icon: const Icon(Icons.person),        title: ("Profile"),        // activeColorPrimary: CupertinoColors.activeBlue,        // inactiveColorPrimary: CupertinoColors.systemGrey,        // scrollController: _scrollController1,        // routeAndNavigatorSettings: RouteAndNavigatorSettings(        //   initialRoute: "/",        //   routes: {        //     "/first": (final context) => const MainScreen2(),        //     "/second": (final context) => const MainScreen3(),        //   },        // ),      ),    ];  }  @override  Widget build(BuildContext context) {    return PersistentTabView(      context,      controller: _controller,      screens: _buildScreens,      items: _navBarsItems(),      // handleAndroidBackButtonPress: true,      // // Default is true.      // resizeToAvoidBottomInset: true,      // // This needs to be true if you want to move up the screen on a non-scrollable screen when keyboard appears. Default is true.      // stateManagement: true,      // // Default is true.      // hideNavigationBarWhenKeyboardAppears: true,      // popBehaviorOnSelectedNavBarItemPress: PopActionScreensType.all,      padding: const EdgeInsets.only(top: 8),      backgroundColor: AppColors.secondBackGroundColor,      isVisible: true,      animationSettings: const NavBarAnimationSettings(        navBarItemAnimation: ItemAnimationSettings(          // Navigation Bar's items animation properties.          duration: Duration(milliseconds: 400),          curve: Curves.ease,        ),        // screenTransitionAnimation: ScreenTransitionAnimationSettings(        //   // Screen transition animation on change of selected tab.        //   animateTabTransition: true,        //   duration: Duration(milliseconds: 200),        //   screenTransitionAnimationType: ScreenTransitionAnimationType.fadeIn,        // ),      ),      confineToSafeArea: true,      // navBarHeight: kBottomNavigationBarHeight,      navBarStyle: NavBarStyle.style15,    );  }}