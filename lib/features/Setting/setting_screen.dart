import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:flutter_settings_ui/flutter_settings_ui.dart';import '../../core/Network/custom_notification_manager.dart';import '../../core/utils/resource/colors.dart';import '../../core/utils/resource/icons.dart';import 'package:workmanager/workmanager.dart';import '../../core/Network/work_manager_notification.dart';import '../../core/utils/resource/styles.dart';import 'ViewModel/setting_cubit.dart';class SettingScreen extends StatelessWidget {  const SettingScreen({super.key});  @override  Widget build(BuildContext context) {    return BlocProvider(      create: (context) => SettingCubit(),      child: BlocBuilder<SettingCubit, SettingState>(        builder: (context, state) {          return Scaffold(            appBar: AppBar(              leading: InkWell(                onTap: () => Navigator.of(context).pop(),                child: AppIcons.arrowBack,              ),            ),            body: SettingsList(              applicationType: ApplicationType.material,              platform: DevicePlatform.android,              darkTheme: buildSettingsThemeData(),              lightTheme: buildSettingsThemeData(),              sections: [                SettingsSection(                  title: Text(                    'security',                    style: Styles.text14().copyWith(                      color: AppColors.gray1TextColor,                    ),                  ),                  tiles: [                    SettingsTile.switchTile(                      onToggle: (value) async {},                      initialValue: false,                      leading: Icon(Icons.password),                      title: Text(                        'Enable Password Lock',                        style: Styles.text16(),                      ),                    ),                    SettingsTile.switchTile(                      onToggle: (value) async {},                      initialValue: false,                      leading: Icon(Icons.face),                      title: Text('Face Unlock'),                    ),                    SettingsTile.switchTile(                      onToggle: (value) {},                      leading: Icon(Icons.fingerprint),                      title: Text('Finger Unlock'),                      onPressed: (context) {},                      initialValue: false,                    ),                  ],                ),                SettingsSection(                  title: Text('Settings'),                  tiles: [                    SettingsTile.switchTile(                      onToggle: (value) async {                        if (!value) {                          await Workmanager().cancelAll();                        } else {                          await WorkManagerNotification.init();                        }                      },                      initialValue: true,                      leading: Icon(Icons.notifications),                      title: Text('Cancel Notification Daily reminder'),                    ),                    SettingsTile.switchTile(                      onToggle: (value) async {                        if (!value) {                          await NotificationManager().cancelAllNotifications();                          await Workmanager().cancelAll();                        } else {                          await WorkManagerNotification.init();                          await NotificationManager().initialize();                        }                      },                      initialValue: true,                      leading: Icon(Icons.notifications),                      title: Text('Cancel All Notification'),                    ),                    SettingsTile.navigation(                      leading: Icon(Icons.notifications),                      title: Text('Edit Time Notification'),                      trailing: AppIcons.arrowForward,                      onPressed: (context) {},                    ),                  ],                ),                SettingsSection(                  title: Text('Backup & Restore'),                  tiles: [                    SettingsTile.navigation(                      onPressed: (context) {},                      leading: Icon(Icons.notifications),                      title: Text('Import Backup'),                      trailing: AppIcons.arrowForward,                    ),                    SettingsTile.navigation(                      leading: Icon(Icons.notifications),                      title: Text('Export Backup'),                      trailing: AppIcons.arrowForward,                      onPressed: (context) {},                    ),                  ],                ),              ],            ),          );        },      ),    );  }  SettingsThemeData buildSettingsThemeData() {    return SettingsThemeData(        settingsListBackground: AppColors.backGroundColor,        settingsSectionBackground: AppColors.backGroundColor,        inactiveSubtitleColor: AppColors.primaryColor,        leadingIconsColor: AppColors.iconColor,        titleTextColor: AppColors.gray1TextColor,        settingsTileTextColor: AppColors.textColor,        tileHighlightColor: AppColors.backGroundColor,        inactiveTitleColor: AppColors.backGroundColor,        tileDescriptionTextColor: AppColors.gray2TextColor);  }}