import 'package:bloc/bloc.dart';import 'package:intl/intl.dart';import 'package:meta/meta.dart';import '../../data/models/task_model.dart';part 'calendar_state.dart';class CalendarCubit extends Cubit<CalendarState> {  CalendarCubit() : super(CalendarInitial());  bool isToday = true;  DateTime dateTime = DateTime.now();  List<TaskModel> taskModel = [];  void filterToday() {    emit(CalendarLoading());    final String dateTimeFormat = DateFormat("E M").format(dateTime);    final list = taskModel.where(      (element) {        return DateFormat("E M").format(element.dateTime) == dateTimeFormat;      },    ).toList();    emit(CalendarSucceed(list));  }  void filterCompleted() {    emit(CalendarLoading());    final String dateTimeFormat = DateFormat("E M").format(dateTime);    final list = taskModel.where(      (element) {        return DateFormat("E M").format(element.dateTime) == dateTimeFormat &&            element.isCompleted;      },    ).toList();    emit(CalendarSucceed(list));  }  void filter() {    if (isToday == true) {      filterToday();    } else {      filterCompleted();    }  }  void changeDate(DateTime currentDateTime) {    dateTime = currentDateTime;    if (isToday == true) {      filterToday();    } else {      filterCompleted();    }  }  void switchButtons() {    isToday = !isToday;    if (isToday == true) {      filterToday();    } else {      filterCompleted();    }  } //Succeed  void addTask(TaskModel model) {    taskModel.add(model);    if (isToday == true) {      filterToday();    } else {      filterCompleted();    }  }}