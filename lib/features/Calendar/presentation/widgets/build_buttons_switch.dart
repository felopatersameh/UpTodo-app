import 'package:contained_tab_bar_view/contained_tab_bar_view.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import '../manager/calendar_cubit.dart';import '../../../../core/utils/Widget/build_items_task.dart';import '../../../../core/utils/resource/string.dart';import '../../../../core/utils/resource/colors.dart';import '../../../../core/utils/resource/styles.dart';class BuildButtonsSwitch extends StatefulWidget {  const BuildButtonsSwitch({super.key});  @override  State<BuildButtonsSwitch> createState() => _BuildButtonsSwitchState();}EdgeInsetsGeometry _marginTabBar =    const EdgeInsets.only(left: 25, right: 25, top: 20);double _heightTabBar = .09;double _widthTabBar = .9;Decoration _decorationContainer = BoxDecoration(  border: Border.all(width: 2, color: AppColors.gray2TextColor),);class _BuildButtonsSwitchState extends State<BuildButtonsSwitch> {  @override  Widget build(BuildContext context) {    return BlocBuilder<CalendarCubit, CalendarState>(      builder: (context, state) {        return Expanded(            child: ContainedTabBarView(          onChange: (p0) {            context.read<CalendarCubit>().switchButtons();          },          tabBarViewProperties: const TabBarViewProperties(            physics: ClampingScrollPhysics(),          ),          tabs: [            Container(              padding: const EdgeInsets.symmetric(vertical: 14, horizontal: 48),              decoration: !context.read<CalendarCubit>().isToday                  ? _decorationContainer                  : null,              child: const Text(AppStrings.todayTask),            ),            Container(              padding: const EdgeInsets.symmetric(vertical: 14, horizontal: 37),              decoration: context.read<CalendarCubit>().isToday                  ? _decorationContainer                  : null,              child: const Text(AppStrings.completeTask),            ),          ],          tabBarProperties: TabBarProperties(            isScrollable: false,            margin: _marginTabBar,            width: MediaQuery.sizeOf(context).width * _widthTabBar,            height: MediaQuery.sizeOf(context).height * _heightTabBar,            background: Container(              decoration: const BoxDecoration(                color: AppColors.secondBackGroundColor,              ),            ),            position: TabBarPosition.top,            alignment: TabBarAlignment.center,            indicatorWeight: 0,            indicatorPadding:                const EdgeInsets.symmetric(vertical: 14, horizontal: 18),            indicator: const BoxDecoration(              shape: BoxShape.rectangle,              color: AppColors.primaryColor,            ),            labelStyle: Styles.text16(),            unselectedLabelStyle: Styles.text16(),            indicatorSize: TabBarIndicatorSize.tab,            indicatorColor: Colors.transparent,          ),          views: const [            BuildItemsTask(),            BuildItemsTask(),          ],        ));      },    );  }// Container buildContainer(BuildContext context) => Container(//       margin: const EdgeInsets.only(//         left: 25,//         right: 25,//         top: 20,//       ),//       color: AppColors.secondBackGroundColor,//       height: MediaQuery.sizeOf(context).height * _heightBigContainer,//       child: Row(//         mainAxisAlignment: MainAxisAlignment.spaceAround,//         children: [//           InkWell(//               onTap: () {//                 setState(() {//                   isSelected = false;//                 });//               },//               child: Container(//                 height: MediaQuery.sizeOf(context).height * _heightContainers,//                 width: MediaQuery.sizeOf(context).width * _widthContainers,//                 decoration: BoxDecoration(//                   color: isSelected//                       ? Colors.transparent//                       : AppColors.primaryColor,//                   border: isSelected ? _borderContainer : null,//                 ),//                 child: Align(//                     child: Text(//                   AppStrings.todayTask,//                   style: Styles.text16(),//                 )),//               )),//           InkWell(//             onTap: () {//               setState(() {//                 isSelected = true;//               });//             },//             child: Container(//               height: MediaQuery.sizeOf(context).height * _heightContainers,//               width: MediaQuery.sizeOf(context).width * _widthContainers,//               decoration: BoxDecoration(//                 color://                     isSelected ? AppColors.primaryColor : Colors.transparent,//                 border: !isSelected ? _borderContainer : null,//               ),//               child: Align(//                   child: Text(//                 AppStrings.completeTask,//                 style: Styles.text16(),//               )),//             ),//           ),//         ],//       ),//     );}