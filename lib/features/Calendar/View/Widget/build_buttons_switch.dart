import 'package:contained_tab_bar_view/contained_tab_bar_view.dart';import 'package:flutter/material.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:uptodo/features/Calendar/View/Widget/task_completed_by_selected.dart';import 'task_running_by_selected.dart';import '../../../../core/utils/resource/string.dart';import '../../../../core/utils/resource/colors.dart';import '../../../../core/utils/resource/styles.dart';class BuildButtonsSwitch extends StatefulWidget {  const BuildButtonsSwitch({super.key});  @override  State<BuildButtonsSwitch> createState() => _BuildButtonsSwitchState();}EdgeInsetsGeometry _marginTabBar =    const EdgeInsets.only(left: 25, right: 25, top: 20).r;// Decoration _decorationContainer = BoxDecoration(//   border: Border.all(width: 2, color: AppColors.gray2TextColor),// );class _BuildButtonsSwitchState extends State<BuildButtonsSwitch> {  @override  Widget build(BuildContext context) {    return Expanded(            child: ContainedTabBarView(          tabBarViewProperties: const TabBarViewProperties(),          tabs: [            SizedBox(              // padding: const EdgeInsets.symmetric(vertical: 14, horizontal: 48),              // decoration: !context.read<TaskManagementCubit>().isToday              //     ? _decorationContainer              //     : null,              child: const Text(AppStrings.todayTask),            ),            SizedBox(              // padding: const EdgeInsets.symmetric(vertical: 14, horizontal: 37),              // decoration: context.read<TaskManagementCubit>().isToday              //     ? _decorationContainer              //     : null,              child: const Text(AppStrings.completeTask),            ),          ],          tabBarProperties: TabBarProperties(            isScrollable: false,            margin: _marginTabBar,            width: 326.w,            height: 80.h,            background: Container(              decoration: const BoxDecoration(                color: AppColors.secondBackGroundColor,              ),            ),            position: TabBarPosition.top,            alignment: TabBarAlignment.center,            indicatorWeight: 0,            indicatorPadding: const EdgeInsets.only(              top: 15,              bottom: 15,              right: 10,              left: 16,            ).r,            indicator: const BoxDecoration(              shape: BoxShape.rectangle,              color: AppColors.primaryColor,            ),            labelStyle: Styles.text16(),            unselectedLabelStyle: Styles.text16(),            indicatorSize: TabBarIndicatorSize.tab,            indicatorColor: Colors.transparent,          ),          views: const [            TaskRunningBySelected(),            TaskCompletedBySelected(),          ],        ));  }}