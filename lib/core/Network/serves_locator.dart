import 'package:get_it/get_it.dart';import 'package:hive_flutter/hive_flutter.dart';import '../../features/TaskManagement/ViewModel/AddTask/add_task_cubit.dart';import '../../features/TaskManagement/model/category_model.dart';import '../../features/TaskManagement/model/priority_model.dart';import '../../features/User/ViewModel/user_cubit.dart';import '../model/task_model.dart';import '../../features/User/Model/user_account_model.dart';final getIt = GetIt.instance;Future<void> setupService() async {  await Hive.initFlutter(); // Initialize Hive with Flutter support  // Register the adapters  Hive.registerAdapter(UserAccountModelAdapter());  Hive.registerAdapter(TaskModelAdapter());  Hive.registerAdapter(CategoryModelAdapter());  Hive.registerAdapter(PriorityModelAdapter());  // Open the boxes and register them with GetIt  final userAccountBox = await Hive.openBox<UserAccountModel>('userAccountBox');  getIt.registerSingleton<Box<UserAccountModel>>(userAccountBox);  final taskBox = await Hive.openBox<TaskModel>('taskBox');  getIt.registerSingleton<Box<TaskModel>>(taskBox);  final categoryBox = await Hive.openBox<CategoryModel>('categoryBox');  getIt.registerSingleton<Box<CategoryModel>>(categoryBox);  final priorityBox = await Hive.openBox<PriorityModel>('priorityBox');  getIt.registerSingleton<Box<PriorityModel>>(priorityBox);  // state management  // getIt.registerFactory<UserCubit>(() => UserCubit());  // getIt.registerFactory<AddTaskCubit>(() => AddTaskCubit()..filter());}