import 'package:get_it/get_it.dart';import 'package:hive_flutter/hive_flutter.dart';import '../../features/Calendar/data/models/category_model.dart';import '../../features/Calendar/data/models/priority_model.dart';import '../../features/Calendar/data/models/task_model.dart';import '../../features/User/data/model/user_account_model.dart';final getIt = GetIt.instance;Future<void> setup() async {  try {    await Hive.initFlutter();    Hive.registerAdapter(UserAccountModelAdapter());    Hive.registerAdapter(TaskModelAdapter());    Hive.registerAdapter(CategoryModelAdapter());    Hive.registerAdapter(PriorityModelAdapter());    if (!Hive.isBoxOpen('userAccountBox')) {      print("object");      final userAccountBox =          await Hive.openBox<UserAccountModel>('userAccountBox');      getIt.registerSingleton<Box<UserAccountModel>>(userAccountBox);    }    if (!Hive.isBoxOpen('taskBox')) {      print("object");      final taskBox = await Hive.openBox<TaskModel>('taskBox');      getIt.registerSingleton<Box<TaskModel>>(taskBox);    }    if (!Hive.isBoxOpen('categoryBox')) {      print("object");      final categoryBox = await Hive.openBox<CategoryModel>('categoryBox');      getIt.registerSingleton<Box<CategoryModel>>(categoryBox);    }    if (!Hive.isBoxOpen('priorityBox')) {      print("object");      final priorityBox = await Hive.openBox<PriorityModel>('priorityBox');      getIt.registerSingleton<Box<PriorityModel>>(priorityBox);    }  } catch (e) {    print('Error initializing Hive: $e');  }}